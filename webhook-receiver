#!/usr/bin/perl -I/srv/current/common -I.
#
#  This is the webhook receiver code which responds to pushes sent
# from the various git-hosting sites.
#
#  It is a rewrite of that which was previously constructed using
# Ruby & Sinatra, which is still linked to publicly:
#
#    https://github.com/skx/webhook-receiver
#
#  This rewrite was initiated to avoid having to mix implementation
# languages - Rather than Ruby+Perl we're 100% Perl.
#
#  Launch it like so:
#
#      ./webhook-receiver
#
# Steve
# --
#


use strict;
use warnings;


#
#  Load our server-object.
#
use WebHook::Receiver;

#
#  Ensure we don't get buffered output.
#
{
    my $ofh = select STDOUT;
    $| = 1;
    select $ofh;
}

#
#  Load the application
#
my $app = WebHook::Receiver->new();

#
#  Set the production/development-mode, and load a secret.
#
$app->mode('production');

#
# A very weak secret.
#
my @chars = ( "A" .. "Z", "a" .. "z", "0" .. "9" );
my $rand;
$rand .= $chars[rand @chars] for 1 .. 16;
$app->secret($rand);

#
#  Start the daemon
#
my $daemon =
  Mojo::Server::Daemon->new( app => $app, listen => ['http://*:9898'] );
eval {$daemon->run();};
if ($@)
{
    print "Failed to start daemon: $@\n";
    exit(1);
}
